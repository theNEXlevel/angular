{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx", "@stylistic/ts"],
  "overrides": [
    {
      "files": ["*.html"],
      "extends": ["plugin:@nx/angular-template"],
      "rules": {
        "@angular-eslint/template/prefer-control-flow": ["error"],
        "@angular-eslint/template/prefer-self-closing-tags": ["error"]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nx/typescript", "plugin:@nx/angular"],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "prefix": "crx",
            "style": "camelCase",
            "type": "attribute"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "prefix": "crx",
            "style": "kebab-case",
            "type": "element"
          }
        ],
        "@angular-eslint/use-pipe-transform-interface": ["off"],
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "allowCircularSelfDependency": true,
            "depConstraints": [
              {
                "sourceTag": "type:feature",
                "onlyDependOnLibsWithTags": ["type:data-access", "type:feature", "type:ui", "type:util"]
              },
              {
                "sourceTag": "type:data-access",
                "onlyDependOnLibsWithTags": ["type:data-access", "type:util"]
              },
              {
                "sourceTag": "type:ui",
                "onlyDependOnLibsWithTags": ["type:ui", "type:util"]
              },
              {
                "sourceTag": "type:util",
                "onlyDependOnLibsWithTags": ["type:util"]
              }
            ]
          }
        ],
        "@stylistic/ts/brace-style": ["error"],
        "@stylistic/ts/func-call-spacing": ["error"],
        "@stylistic/ts/indent": [
          "error",
          4,
          {
            "MemberExpression": 0,
            "SwitchCase": 1
          }
        ],
        "@stylistic/ts/key-spacing": [
          "error",
          {
            "afterColon": true,
            "beforeColon": false
          }
        ],
        "@stylistic/ts/lines-between-class-members": [
          "error",
          {
            "enforce": [
              {
                "blankLine": "always",
                "prev": "*",
                "next": "method"
              },
              {
                "blankLine": "always",
                "prev": "method",
                "next": "*"
              }
            ]
          }
        ],
        "@stylistic/ts/object-curly-spacing": ["error", "always"],
        "@stylistic/ts/quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true
          }
        ],
        "@stylistic/ts/semi": ["error"],
        "@stylistic/ts/space-before-blocks": ["error"],
        "@stylistic/ts/space-before-function-paren": ["error"],
        "@stylistic/ts/space-infix-ops": ["error"],
        "@typescript-eslint/adjacent-overload-signatures": ["off"],
        "@typescript-eslint/ban-types": "warn",
        "@typescript-eslint/class-literal-property-style": "warn",
        "@typescript-eslint/consistent-indexed-object-style": "warn",
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "property",
            "format": ["camelCase", "PascalCase", "snake_case"]
          },
          {
            "selector": "property",
            "modifiers": ["requiresQuotes"],
            "format": null
          }
        ],
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "_"
          }
        ],
        "arrow-body-style": ["error", "as-needed"],
        "array-bracket-spacing": ["error"],
        "arrow-parens": ["error"],
        "arrow-spacing": ["error"],
        "computed-property-spacing": ["error"],
        "curly": ["error"],
        "eol-last": ["error"],
        "eqeqeq": ["error", "smart"],
        "function-call-argument-newline": ["error", "consistent"],
        "function-paren-newline": ["error", "multiline"],
        "linebreak-style": ["error"],
        "max-len": [
          "error",
          120,
          {
            "ignoreTemplateLiterals": true,
            "ignoreRegExpLiterals": true
          }
        ],
        "new-parens": ["error"],
        "no-caller": ["error"],
        "no-case-declarations": ["off"],
        "no-empty": [
          "error",
          {
            "allowEmptyCatch": true
          }
        ],
        "no-eval": ["error"],
        "no-extra-boolean-cast": ["warn"],
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1,
            "maxEOF": 0,
            "maxBOF": 0
          }
        ],
        "no-restricted-globals": ["error", "document", "window", "localStorage", "sessionStorage"],
        "no-restricted-syntax": ["error", "PropertyDefinition[definite = true]"],
        "no-trailing-spaces": [
          "error",
          {
            "ignoreComments": true
          }
        ],
        "no-unused-expressions": ["error"],
        "no-var": ["error"],
        "object-shorthand": ["error", "always"],
        "operator-linebreak": ["error", "before"],
        "padded-blocks": ["error"],
        "prefer-arrow-callback": ["error"],
        "prefer-const": ["error"],
        "quote-props": ["error", "as-needed"],
        "space-in-parens": ["error"],
        "spaced-comment": ["error"],
        "@typescript-eslint/no-extra-semi": "error",
        "no-extra-semi": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {}
    },
    {
      "files": ["*.spec.ts", "*.spec.tsx", "*.spec.js", "*.spec.jsx"],
      "env": {
        "jest": true
      },
      "rules": {}
    },
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {
        "@nx/dependency-checks": "off"
      }
    }
  ]
}
